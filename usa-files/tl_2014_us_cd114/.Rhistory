#airlines
ns <- paste(db, "airports", sep=".")
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
#airlines
ns <- paste(db, "airports", sep=".")
lst <- split(df_airports, rownames(df_airports))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
#flights
ns <- paste(db, "flights", sep=".")
lst <- split(df_flights, rownames(df_flights))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
#planes
ns <- paste(db, "planes", sep=".")
lst <- split(df_planes, rownames(df_planes`))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
#weather
ns <- paste(db, "weather", sep=".")
lst <- split(df_weather, rownames(df_weather))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
}
if (mongo.is.connected(m) == TRUE) {
#airlines
ns <- paste(db, "airports", sep=".")
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
#airlines
ns <- paste(db, "airports", sep=".")
lst <- split(df_airports, rownames(df_airports))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
#flights
ns <- paste(db, "flights", sep=".")
lst <- split(df_flights, rownames(df_flights))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
#planes
ns <- paste(db, "planes", sep=".")
lst <- split(df_planes, rownames(df_planes`))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
#weather
ns <- paste(db, "weather", sep=".")
lst <- split(df_weather, rownames(df_weather))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
}
ns <- paste(db, "airports", sep=".")
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
ns <- paste(db, "airports", sep=".")
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
ns <- paste(db, "airports", sep=".")
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
ns <- paste(db, "airports", sep=".")
lst <- split(df_airports, rownames(df_airports))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
ns <- paste(db, "flights", sep=".")
lst <- split(df_flights, rownames(df_flights))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
ns <- paste(db, "planes", sep=".")
lst <- split(df_planes, rownames(df_planes`))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
ns <- paste(db, "planes", sep=".")
lst <- split(df_planes, rownames(df_planes`))
bson_lst <- lapply(lst, mongo.bson.from.list)
ns <- paste(db, "planes", sep=".")
ns <- paste(db, "planes", sep=".")
lst <- split(df_planes, rownames(df_planes))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
ns <- paste(db, "weather", sep=".")
lst <- split(df_weather, rownames(df_weather))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
if (mongo.is.connected(m) == TRUE) {
#airlines
ns <- paste(db, "airports", sep=".")
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
#airlines
ns <- paste(db, "airports", sep=".")
lst <- split(df_airports, rownames(df_airports))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
#flights
ns <- paste(db, "flights", sep=".")
lst <- split(df_flights, rownames(df_flights))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
#planes
ns <- paste(db, "planes", sep=".")
lst <- split(df_planes, rownames(df_planes))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
#weather
ns <- paste(db, "weather", sep=".")
lst <- split(df_weather, rownames(df_weather))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
}
if(mongo.is.connected(m) == TRUE) {
#list databases
mongo.get.databases(m)
#get collections into a data frame
ns <- paste(db, "airlines", sep=".")
cur_airlines <- mongo.bson.from.list(mongo.find.batch(m, ns))
ns <- paste(db, "airports", sep=".")
cur_airports <- mongo.bson.from.list(mongo.find.batch(m, ns))
ns <- paste(db, "flights", sep=".")
cur_planes <- mongo.bson.from.list(mongo.find.batch(m, ns))
ns <- paste(db, "planes", sep=".")
cur_flights <- mongo.bson.from.list(mongo.find.batch(m, ns))
ns <- paste(db, "weather", sep=".")
cur_weather <- mongo.bson.from.list(mongo.find.batch(m, ns))
}
df_airlines <- as.data.frame(lapply(cur_airlines, data.frame, stringsAsFactors = FALSE))
View(df_airlines)
View(df_airlines)
cur_airlines
l_airlines <- mongo.bson.to.list(cur_airlines)
df_airlines <- as.data.frame(lapply(l_airlines, data.frame, stringsAsFactors = FALSE))
View(df_airlines)
ns <- paste(db, "airports", sep=".")
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = ns, lst = bson_lst)
ns <- paste(db, "airlines", sep=".")
cur_airlines <- mongo.bson.from.list(mongo.find.batch(m, ns))
l_airlines <- mongo.bson.to.list(cur_airlines)
df_airlines <- as.data.frame(lapply(l_airlines, data.frame, stringsAsFactors = FALSE))
View(df_airlines)
cur_airlines <- mongo.bson.from.list(mongo.find.batch(m, ns))
l_airlines <- mongo.bson.to.list(cur_airlines)
l_airlines
dfs <- lapply(l_airlines, data.frame, stringsAsFactors = FALSE)
dfs <- lapply(df_airlines, data.frame, stringsAsFactors = FALSE)
df_airlines <- lapply(df_airlines, data.frame, stringsAsFactors = FALSE)
df_airlines <- as.data.frame(lapply(df_airlines, data.frame, stringsAsFactors = FALSE))
View(df_airlines)
ns <- paste(db, "airlines", sep=".")
cur_airlines <- mongo.bson.from.list(mongo.find.batch(m, ns))
l_airlines <- mongo.bson.to.list(cur_airlines)
resList = mongo.bson.to.list(l_airlines)
l_airlines <- mongo.bson.to.list(cur_airlines)
resList = mongo.bson.to.list(cur_airlines)
l_airlines$cur_airlines
mongo.find.batch(m, ns)
resList = mongo.find.batch(m, ns)
results <- mongo.find.batch(m, ns)
resList = mongo.bson.to.list(results)
results <- mongo.bson.from.list(mongo.find.batch(m, ns))
resList = mongo.bson.to.list(results)
resList$results
df_airlines <- as.data.frame(lapply(resList$results, data.frame, stringsAsFactors = FALSE))
resList = mongo.bson.to.list(mongo.bson.from.list(mongo.find.batch(m, ns)))
df_airlines <- as.data.frame(lapply(resList, data.frame, stringsAsFactors = FALSE))
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = "flights.airlines", lst = bson_lst)
cursor <- mongo.find.batch(m, ns)
cursor <- mongo.bson.from.list(mongo.find.batch(m, ns))
resList = mongo.bson.to.list(cursor)
dfs <- as.data.frame(lapply(df_airlines, data.frame, stringsAsFactors = FALSE))
library(dplyr)
dbname <- "flights"
dbuser <- "postgres"
dbpass <- "postgres"
dbhost <- "localhost"
dbport <- 5432
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=dbhost, port=dbport, dbname=dbname,user=dbuser, password=dbpass)
query <- dbSendQuery(
con, query <- "select * from public.airlines")
df_airlines <- fetch(query,n=-1)
m <- mongo.create(host = "localhost")
mongo.is.connected(m)
#version of MongoDB may be at issue with no data returned here!
db <- "flights"
mongo.get.database.collections(m, db = db)
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = "flights.airlines", lst = bson_lst)
cursor <- mongo.find.batch(m, ns)
cursor <- mongo.bson.from.list(mongo.find.batch(m, ns))
resList = mongo.bson.to.list(cursor)
dfs <- as.data.frame(lapply(df_airlines, data.frame, stringsAsFactors = FALSE))
if (mongo.is.connected(m) == TRUE) {
#airlines
ns <- paste(db, "airlines", sep=".")
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = "flights.airlines", lst = bson_lst)
#airports
ns <- paste(db, "airports", sep=".")
lst <- split(df_airports, rownames(df_airports))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = "flights.airports", lst = bson_lst)
#flights
ns <- paste(db, "flights", sep=".")
lst <- split(df_flights, rownames(df_flights))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = "flights.airports", lst = bson_lst)
#planes
ns <- paste(db, "planes", sep=".")
lst <- split(df_planes, rownames(df_planes))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = "flights.planes", lst = bson_lst)
#weather
ns <- paste(db, "weather", sep=".")
lst <- split(df_weather, rownames(df_weather))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = "flights.weather", lst = bson_lst)
}
if(mongo.is.connected(m) == TRUE) {
#list databases
mongo.get.databases(m)
#get collections into a data frame
#airlines
ns <- paste(db, "airlines", sep=".")
b_airlines <- mongo.bson.from.list(mongo.find.batch(m, ns))
#airports
ns <- paste(db, "airports", sep=".")
b_airports <- mongo.bson.from.list(mongo.find.batch(m, ns))
#planes
ns <- paste(db, "flights", sep=".")
b_planes <- mongo.bson.from.list(mongo.find.batch(m, ns))
#flights
ns <- paste(db, "planes", sep=".")
b_flights <- mongo.bson.from.list(mongo.find.batch(m, ns))
#weather
ns <- paste(db, "weather", sep=".")
b_weather <- mongo.bson.from.list(mongo.find.batch(m, ns))
}
ns <- paste(db, "airlines", sep=".")
c_airlines <- mongo.bson.to.list(mongo.bson.from.list(mongo.find.batch(m, ns)))
df_airlines <- as.data.frame(lapply(c_airlines, data.frame, stringsAsFactors = FALSE))
dbname <- "flights"
dbuser <- "postgres"
dbpass <- "postgres"
dbhost <- "localhost"
dbport <- 5432
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=dbhost, port=dbport, dbname=dbname,user=dbuser, password=dbpass)
df_airlines <- fetch(query,n=-1)
query <- dbSendQuery(
con, query <- "select * from public.airports")
df_airports <- fetch(query,n=-1)
m <- mongo.create(host = "localhost")
mongo.is.connected(m)
#version of MongoDB may be at issue with no data returned here!
db <- "flights"
mongo.get.database.collections(m, db = db)
b_airlines <- mongo.bson.from.df(df_airlines)
b_airlines <- mongo.bson.from.df(df_airlines)
query <- dbSendQuery(
con, query <- "select * from public.airlines")
df_airlines <- fetch(query,n=-1)
b_airlines <- mongo.bson.from.df(df_airlines)
c_airlines <- mongo.bson.to.list(mongo.bson.from.list(mongo.find.batch(m, ns)))
df_airlines <- as.data.frame(lapply(c_airlines, data.frame, stringsAsFactors = FALSE))
query <- dbSendQuery(
con, query <- "select * from public.airlines")
df_airlines <- fetch(query,n=-1)
b_airlines <- mongo.bson.from.df(df_airlines)
ns <- paste(db, "airlines", sep=".")
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = "flights.airlines", lst = bson_lst)
ns <- paste(db, "airlines", sep=".")
c_airlines <- mongo.bson.to.list(mongo.bson.from.list(mongo.find.batch(m, ns)))
df_airlines <- as.data.frame(lapply(c_airlines, data.frame, stringsAsFactors = FALSE))
data.frame(df_airports, StringAsFactor=F)
df_airports <- data.frame(df_airports, StringAsFactor=F)
b_airlines <- mongo.bson.from.df(df_airlines)
ns <- paste(db, "airlines", sep=".")
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = "flights.airlines", lst = bson_lst)
ns <- paste(db, "airlines", sep=".")
c_airlines <- mongo.bson.to.list(mongo.bson.from.list(mongo.find.batch(m, ns)))
df_airlines <- as.data.frame(lapply(c_airlines, data.frame, stringsAsFactors = FALSE))
library(rmongodb)
library(RPostgreSQL)
library(dplyr)
dbname <- "flights"
dbuser <- "postgres"
dbpass <- "postgres"
dbhost <- "localhost"
dbport <- 5432
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=dbhost, port=dbport, dbname=dbname,user=dbuser, password=dbpass)
query <- dbSendQuery(
con, query <- "select * from public.airlines")
df_airlines <- fetch(query,n=-1)
dbDisconnect(con)
m <- mongo.create(host = "localhost")
mongo.is.connected(m)
#version of MongoDB may be at issue with no data returned here!
db <- "flights"
mongo.get.database.collections(m, db = db)
b_airlines <- mongo.bson.from.df(df_airlines)
mongo.is.connected(m)
ns <- paste(db, "airlines", sep=".")
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = "flights.airlines", lst = bson_lst)
ns <- paste(db, "airlines", sep=".")
c_airlines <- mongo.bson.to.list(mongo.bson.from.list(mongo.find.batch(m, ns)))
df_airlines <- as.data.frame(lapply(c_airlines, data.frame, stringsAsFactors = FALSE))
View(df_airlines)
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,"flights.airlines")
mongo.insert.batch(mongo = m, ns = "flights.airlines", lst = bson_lst)
cursor <- mongo.find.batch(m, ns)
cursor <- mongo.bson.from.list(mongo.find.batch(m, ns))
# Converting to a list
resList = mongo.bson.to.list(cursor)
dfs <- as.data.frame(lapply(df_airlines, data.frame, stringsAsFactors = FALSE))
dbname <- "flights"
dbuser <- "postgres"
dbpass <- "postgres"
dbhost <- "localhost"
dbport <- 5432
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=dbhost, port=dbport, dbname=dbname,user=dbuser, password=dbpass)
query <- dbSendQuery(
con, query <- "select * from public.airlines")
df_airlines <- fetch(query,n=-1)
dbDisconnect(con)
m <- mongo.create(host = "localhost")
mongo.is.connected(m)
#version of MongoDB may be at issue with no data returned here!
db <- "flights"
mongo.get.database.collections(m, db = db)
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,"flights.airlines")
mongo.insert.batch(mongo = m, ns = "flights.airlines", lst = bson_lst)
cursor <- mongo.find.batch(m, ns)
cursor <- mongo.bson.from.list(mongo.find.batch(m, ns))
# Converting to a list
resList = mongo.bson.to.list(cursor)
# Creating many data frames embedding each of our results
dfs <- as.data.frame(lapply(df_airlines, data.frame, stringsAsFactors = FALSE))
View(dfs)
library(rmongodb)
library(RPostgreSQL)
library(dplyr)
library(rmongodb)
library(RPostgreSQL)
library(dplyr)
dbname <- "flights"
dbuser <- "postgres"
dbpass <- "postgres"
dbhost <- "localhost"
dbport <- 5432
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=dbhost, port=dbport, dbname=dbname,user=dbuser, password=dbpass)
query <- dbSendQuery(
con, query <- "select * from public.airlines")
df_airlines <- fetch(query,n=-1)
query <- dbSendQuery(
con, query <- "select * from public.airports")
dbDisconnect(con)
dbDisconnect(con)
library(rmongodb)
library(RPostgreSQL)
library(dplyr)
dbname <- "flights"
dbuser <- "postgres"
dbpass <- "postgres"
dbhost <- "localhost"
dbport <- 5432
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=dbhost, port=dbport, dbname=dbname,user=dbuser, password=dbpass)
query <- dbSendQuery(
con, query <- "select * from public.airlines")
dbDisconnect(con)
library(rmongodb)
library(RPostgreSQL)
library(dplyr)
dbname <- "flights"
dbuser <- "postgres"
dbpass <- "postgres"
dbhost <- "localhost"
dbport <- 5432
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=dbhost, port=dbport, dbname=dbname,user=dbuser, password=dbpass)
query <- dbSendQuery(
con, query <- "select * from public.airlines")
df_airlines <- fetch(query,n=-1)
dbDisconnect(con)
m <- mongo.create(host = "localhost")
mongo.is.connected(m)
#version of MongoDB may be at issue with no data returned here!
db <- "flights"
mongo.get.database.collections(m, db = db)
b_airlines <- mongo.bson.from.df(df_airlines)
#airlines
ns <- paste(db, "airlines", sep=".")
lst <- split(df_airlines, rownames(df_airlines))
bson_lst <- lapply(lst, mongo.bson.from.list)
mongo.drop(m,ns)
mongo.insert.batch(mongo = m, ns = "flights.airlines", lst = bson_lst)
ns <- paste(db, "airlines", sep=".")
c_airlines <- mongo.bson.to.list(mongo.bson.from.list(mongo.find.batch(m, ns)))
df_airlines <- as.data.frame(lapply(c_airlines, data.frame, stringsAsFactors = FALSE))
df_airlines <- as.data.frame(lapply(c_airlines, data.frame, stringsAsFactors = FALSE))
df_airlines <- as.data.frame(lapply(c_airlines, data.frame, stringsAsFactors = FALSE))
mongo.find.batch(m, ns)
mongo.bson.from.list(mongo.find.batch(m, ns))
mongo.bson.to.list(mongo.bson.from.list(mongo.find.batch(m, ns)))
df_airlines <- as.data.frame(lapply(c_airlines$`1`, data.frame, stringsAsFactors = FALSE))
View(df_airlines)
View(df_airlines)
View(df_airlines)
c_airlines
c_airlines[1]
c_airlines[1]
lapply(c_airlines, data.frame, stringsAsFactors = FALSE)
df_airlines <- lapply(c_airlines, data.frame, stringsAsFactors = FALSE)
class(df_airlines)
data.frame(df_airlines)
df_airlines
rbind_all(df_airlines)
data.frame(df_airlines)
df_airlines <- data.frame(df_airlines)
rbind_all(df_airlines)
l_airlines <- lapply(c_airlines, data.frame, stringsAsFactors = FALSE)
rbind_all(l_airlines)
l_airlines$carrier
l_airlines$carrier
data.frame(rbind_all(l_airlines))
df_airlines <- data.frame(rbind_all(l_airlines))
View(df_airlines)
kable(df_airlines[,c{2,3}],align='l')
kable(df_airlines[,c(2,3)],align='l')
kable(df_airlines,align='l')
setwd("~/IS607Spring2016/project-final/usa-files")
df_cngrdstr <- read.csv(paste0(getwd(),"/GINI-2014-CongDistrict.csv"))
df_cngrdstr <- mutate(df_cngrdstr,FIPS=substring(df_cngrdstr$GEOID,10,15))
substring(df_cngrdstr$GEOID,10,15)
View(df_cngrdstr)
df_cngrdstr
mutate(df_cngrdstr,FIPS=substring(df_cngrdstr$GEOID,10,15))
library(tidyr)
library(dplyr)
mutate(df_cngrdstr,FIPS=substring(df_cngrdstr$GEOID,10,15))
df_cngrdstr <- mutate(df_cngrdstr,FIPS=substring(df_cngrdstr$GEOID,10,15))
setwd("~/IS607Spring2016/project-final/usa-files/tl_2014_us_cd114/")
US.cngrdstr <- readOGR(dsn=".",layer="tl_2014_us_cd114")
library(XLConnect)    # for loadWorkbook(...) and readWorksheet(...)
library(rgdal)        # for readOGR(...)
library(RColorBrewer) # for brewer.pal(...)
library(data.table)
library(maptools)
library(maps)
library(ggplot2)
library(jsonlite)
library(tidyr)
library(dplyr)
