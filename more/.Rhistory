mycolors = brewer.pal(9,"BrBG")
colnames(dat.india.province)[2:5]=c("Ruralization (Percentage)", "Urbanization (Percentage)","RuralGini","UrbanGini")
ggplot(dat.india.province, aes(x = `Urbanization (Percentage)`, y = GINI)) + geom_point(color = "red") + geom_smooth(method = "lm")
lm(GINI ~ `Urbanization (Percentage)`, data = dat.india.province)
summary(lm(GINI ~ `Urbanization (Percentage)`, data = dat.india.province))
us.cities <- world.cities[world.cities$country.etc == "USA",]
us.counties <- map_data('county')
us.counties <-  us.counties %>%
group_by(subregion) %>%
summarise(avglat = mean(lat), avglong = mean(long))
xprod <- merge(x = us.counties, y = us.cities, by = NULL)
xprod <- xprod %>%
mutate(dist = sqrt((xprod$avglat - xprod$lat)^2 + (xprod$avglong - xprod$long)^2))
us.counties.trx <- xprod %>%
group_by(subregion) %>%
summarise(disttocity=min(dist))
us.counties <- left_join(us.counties, us.counties.trx)
setwd("~/IS607Spring2016/project-final/usa-files")
df_county <- read.csv(paste0(getwd(),"/GINI-2014-County.csv"))
df_county <- mutate(df_county,FIPS=substring(df_county$GEOID,10,15))
setwd("~/IS607Spring2016/project-final/usa-files/cb_2014_us_county_5m/")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$FPSTATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
gini.data <- data.table(df_county)
setkey(gini.data,FIPS)
county.data[gini.data,GINI:=GINI]
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
setkey(county.data,id)
map.df[county.data,GINI:=GINI]
map.df <- mutate(map.df,GINI.NUM=as.numeric(as.character((GINI))))
setwd("~/IS607Spring2016/project-final/usa-files")
df_county <- read.csv(paste0(getwd(),"/GINI-2014-County.csv"))
df_county <- mutate(df_county,FIPS=substring(df_county$GEOID,10,15))
setwd("~/IS607Spring2016/project-final/usa-files/cb_2014_us_county_5m/")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$FPSTATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
gini.data <- data.table(df_county)
setkey(gini.data,FIPS)
county.data[gini.data,GINI:=GINI]
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
data.table(fortify(US.counties))
county.data[gini.data,GINI:=GINI]
setwd("~/IS607Spring2016/project-final/usa-files")
df_county <- read.csv(paste0(getwd(),"/GINI-2014-County.csv"))
df_county <- mutate(df_county,FIPS=substring(df_county$GEOID,10,15))
setwd("~/IS607Spring2016/project-final/usa-files/cb_2014_us_county_5m/")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
gini.data <- data.table(df_county)
setkey(gini.data,FIPS)
county.data[gini.data,GINI:=GINI]
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
setkey(county.data,id)
map.df[county.data,GINI:=GINI]
map.df <- mutate(map.df,GINI.NUM=as.numeric(as.character((GINI))))
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
US.counties <-  us.counties %>%
group_by(subregion) %>%
summarise(avglat = mean(lat), avglong = mean(long))
xprod <- merge(x = us.counties, y = us.cities, by = NULL)
xprod <- xprod %>%
mutate(dist = sqrt((xprod$avglat - xprod$lat)^2 + (xprod$avglong - xprod$long)^2))
US.counties.trx <- xprod %>%
group_by(subregion) %>%
summarise(disttocity=min(dist))
US.counties <- left_join(us.counties, us.counties.trx)
colnames(US.counties)[5] <- "NAME"
inner_join(US.counties, county.data)
US.counties <- inner_join(US.counties, county.data)
View(US.counties)
setwd("~/IS607Spring2016/project-final/usa-files")
df_county <- read.csv(paste0(getwd(),"/GINI-2014-County.csv"))
df_county <- mutate(df_county,FIPS=substring(df_county$GEOID,10,15))
setwd("~/IS607Spring2016/project-final/usa-files/cb_2014_us_county_5m/")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
gini.data <- data.table(df_county)
setkey(gini.data,FIPS)
county.data[gini.data,GINI:=GINI]
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
setkey(county.data,id)
map.df[county.data,GINI:=GINI]
map.df <- mutate(map.df,GINI.NUM=as.numeric(as.character((GINI))))
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
US.counties <-  us.counties %>%
group_by(subregion) %>%
summarise(avglat = mean(lat), avglong = mean(long))
xprod <- merge(x = us.counties, y = us.cities, by = NULL)
xprod <- xprod %>%
mutate(dist = sqrt((xprod$avglat - xprod$lat)^2 + (xprod$avglong - xprod$long)^2))
US.counties.trx <- xprod %>%
group_by(subregion) %>%
summarise(disttocity=min(dist))
US.counties <- left_join(us.counties, us.counties.trx)
colnames(US.counties)[5] <- "NAME"
US.counties <- inner_join(US.counties, gini.data)
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
US.counties <-  us.counties %>%
group_by(subregion) %>%
summarise(avglat = mean(lat), avglong = mean(long))
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
setwd("~/IS607Spring2016/project-final/usa-files")
df_county <- read.csv(paste0(getwd(),"/GINI-2014-County.csv"))
df_county <- mutate(df_county,FIPS=substring(df_county$GEOID,10,15))
setwd("~/IS607Spring2016/project-final/usa-files/cb_2014_us_county_5m/")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
gini.data <- data.table(df_county)
setkey(gini.data,FIPS)
county.data[gini.data,GINI:=GINI]
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
setkey(county.data,id)
map.df[county.data,GINI:=GINI]
map.df <- mutate(map.df,GINI.NUM=as.numeric(as.character((GINI))))
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
US.counties <-  US.counties %>%
group_by(subregion) %>%
summarise(avglat = mean(lat), avglong = mean(long))
xprod <- merge(x = US.counties, y = US.cities, by = NULL)
xprod <- xprod %>%
mutate(dist = sqrt((xprod$avglat - xprod$lat)^2 + (xprod$avglong - xprod$long)^2))
US.counties.trx <- xprod %>%
group_by(subregion) %>%
summarise(disttocity=min(dist))
US.counties <- left_join(us.counties, us.counties.trx)
US.counties <- left_join(US.counties, US.counties.trx)
colnames(US.counties)[5] <- "NAME"
colnames(US.counties)[1] <- "NAME"
US.counties <- inner_join(US.counties, gini.data)
setwd("~/IS607Spring2016/project-final/usa-files")
df_county <- read.csv(paste0(getwd(),"/GINI-2014-County.csv"))
df_county <- mutate(df_county,FIPS=substring(df_county$GEOID,10,15))
setwd("~/IS607Spring2016/project-final/usa-files/cb_2014_us_county_5m/")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
gini.data <- data.table(df_county)
setkey(gini.data,FIPS)
county.data[gini.data,GINI:=GINI]
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
setkey(county.data,id)
map.df[county.data,GINI:=GINI]
map.df <- mutate(map.df,GINI.NUM=as.numeric(as.character((GINI))))
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
US.counties <-  US.counties %>%
group_by(subregion) %>%
summarise(avglat = mean(lat), avglong = mean(long))
xprod <- merge(x = US.counties, y = US.cities, by = NULL)
xprod <- xprod %>%
mutate(dist = sqrt((xprod$avglat - xprod$lat)^2 + (xprod$avglong - xprod$long)^2))
US.counties.trx <- xprod %>%
group_by(subregion) %>%
summarise(disttocity=min(dist))
US.counties <- left_join(US.counties, US.counties.trx)
colnames(US.counties)[1] <- "GEOLABEL"
US.counties <- inner_join(US.counties, gini.data)
setwd("~/IS607Spring2016/project-final/usa-files")
df_county <- read.csv(paste0(getwd(),"/GINI-2014-County.csv"))
df_county <- mutate(df_county,FIPS=substring(df_county$GEOID,10,15))
setwd("~/IS607Spring2016/project-final/usa-files/cb_2014_us_county_5m/")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
gini.data <- data.table(df_county)
setkey(gini.data,FIPS)
county.data[gini.data,GINI:=GINI]
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
setkey(county.data,id)
map.df[county.data,GINI:=GINI]
map.df <- mutate(map.df,GINI.NUM=as.numeric(as.character((GINI))))
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
US.counties <-  US.counties %>%
group_by(subregion) %>%
summarise(avglat = mean(lat), avglong = mean(long))
xprod <- merge(x = US.counties, y = US.cities, by = NULL)
xprod <- xprod %>%
mutate(dist = sqrt((xprod$avglat - xprod$lat)^2 + (xprod$avglong - xprod$long)^2))
US.counties.trx <- xprod %>%
group_by(subregion) %>%
summarise(disttocity=min(dist))
US.counties <- left_join(US.counties, US.counties.trx)
colnames(US.counties)[1] <- "GEOLABEL"
US.counties <- inner_join(US.counties, map.df)
gini.data[] <- lapply(gini.data, as.character)
setwd("~/IS607Spring2016/project-final/usa-files")
df_county <- read.csv(paste0(getwd(),"/GINI-2014-County.csv"))
df_county <- mutate(df_county,FIPS=substring(df_county$GEOID,10,15))
setwd("~/IS607Spring2016/project-final/usa-files/cb_2014_us_county_5m/")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
gini.data <- data.table(df_county)
gini.data[] <- lapply(gini.data, as.character)
setkey(gini.data,FIPS)
county.data[gini.data,GINI:=GINI]
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
setkey(county.data,id)
map.df[county.data,GINI:=GINI]
map.df <- mutate(map.df,GINI.NUM=as.numeric(as.character((GINI))))
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
US.counties <-  US.counties %>%
group_by(subregion) %>%
summarise(avglat = mean(lat), avglong = mean(long))
xprod <- merge(x = US.counties, y = US.cities, by = NULL)
xprod <- xprod %>%
mutate(dist = sqrt((xprod$avglat - xprod$lat)^2 + (xprod$avglong - xprod$long)^2))
US.counties.trx <- xprod %>%
group_by(subregion) %>%
summarise(disttocity=min(dist))
US.counties <- left_join(US.counties, US.counties.trx)
colnames(US.counties)[1] <- "GEOLABEL"
US.counties <- inner_join(US.counties, gini.data)
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
US.counties <-  US.counties %>%
group_by(subregion) %>%
summarise(avglat = mean(lat), avglong = mean(long))
xprod <- merge(x = US.counties, y = US.cities, by = NULL)
xprod <- xprod %>%
mutate(dist = sqrt((xprod$avglat - xprod$lat)^2 + (xprod$avglong - xprod$long)^2))
US.counties.trx <- xprod %>%
group_by(subregion) %>%
summarise(disttocity=min(dist))
US.counties <- left_join(US.counties, US.counties.trx)
colnames(US.counties)[1] <- "GEOLABEL"
View(county.data)
View(US.counties)
View(county.data)
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
df_county <- read.csv(paste0(getwd(),"/GINI-2014-County.csv"))
df_county <- mutate(df_county,FIPS=substring(df_county$GEOID,10,15))
setwd("~/IS607Spring2016/project-final/usa-files")
df_county <- read.csv(paste0(getwd(),"/GINI-2014-County.csv"))
df_county <- mutate(df_county,FIPS=substring(df_county$GEOID,10,15))
setwd("~/IS607Spring2016/project-final/usa-files/cb_2014_us_county_5m/")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
gini.data <- data.table(df_county)
gini.data[] <- lapply(gini.data, as.character)
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
View(gini.data)
View(US.counties)
View(US.counties)
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
US.counties <-  US.counties %>%
group_by(to_lower(subregion)) %>%
summarise(avglat = mean(lat), avglong = mean(long))
to_lower(US.counties$subregion)
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
US.counties <-  US.counties %>%
group_by(subregion) %>%
summarise(avglat = mean(lat), avglong = mean(long))
xprod <- merge(x = US.counties, y = US.cities, by = NULL)
xprod <- xprod %>%
mutate(dist = sqrt((xprod$avglat - xprod$lat)^2 + (xprod$avglong - xprod$long)^2))
US.counties.trx <- xprod %>%
group_by(subregion) %>%
summarise(disttocity=min(dist))
US.counties <- left_join(US.counties, US.counties.trx)
colnames(US.counties)[1] <- "GEOLABEL"
US.counties <- inner_join(US.counties, gini.data)
setwd("~/IS607Spring2016/project-final/usa-files")
df_county <- read.csv(paste0(getwd(),"/GINI-2014-County.csv"))
df_county <- mutate(df_county,FIPS=substring(df_county$GEOID,10,15))
setwd("~/IS607Spring2016/project-final/usa-files/cb_2014_us_county_5m/")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
gini.data <- data.table(df_county)
gini.data[] <- lapply(gini.data, as.character)
setkey(gini.data,FIPS)
county.data[gini.data,GINI:=GINI]
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
setkey(county.data,id)
map.df[county.data,GINI:=GINI]
map.df <- mutate(map.df,GINI.NUM=as.numeric(as.character((GINI))))
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
US.counties <-  US.counties %>%
group_by(subregion) %>%
summarise(avglat = mean(lat), avglong = mean(long))
xprod <- merge(x = US.counties, y = US.cities, by = NULL)
xprod <- xprod %>%
mutate(dist = sqrt((xprod$avglat - xprod$lat)^2 + (xprod$avglong - xprod$long)^2))
US.counties.trx <- xprod %>%
group_by(subregion) %>%
summarise(disttocity=min(dist))
US.counties <- left_join(US.counties, US.counties.trx)
colnames(US.counties)[1] <- "GEOLABEL"
US.counties <- inner_join(US.counties, gini.data)
to_lower(US.counties$subregion)
tolower(US.counties$subregion)
US.cities <- world.cities[world.cities$country.etc == "USA",]
US.counties <- map_data('county')
US.counties <-  US.counties %>%
group_by(subregion) %>%
summarise(avglat = mean(lat), avglong = mean(long))
xprod <- merge(x = US.counties, y = US.cities, by = NULL)
xprod <- xprod %>%
mutate(dist = sqrt((xprod$avglat - xprod$lat)^2 + (xprod$avglong - xprod$long)^2))
US.counties.trx <- xprod %>%
group_by(subregion) %>%
summarise(disttocity=min(dist))
US.counties <- left_join(US.counties, US.counties.trx)
US.counties)[1]
colnames(US.counties)[1]
colnames(US.counties)[1] <- "GEOLABEL"
tolower(US.counties$subregion)
tolower(gini$GEOLABEL)
tolower(gini.data$GEOLABEL)
grep(" county"tolower(gini.data$GEOLABEL),"")
grep(" county",tolower(gini.data$GEOLABEL),"")
sub(" county",tolower(gini.data$GEOLABEL),"")
sub(" county",tolower(gini.data$GEOLABEL),"")
sub(" county",tolower(gini.data$GEOLABEL),"")
gsub(" county",tolower(gini.data$GEOLABEL),"")
tolower(gini.data$GEOLABEL)
gsub(pattern = "$county", replacement = "", x = tolower(gini.data$GEOLABEL), ignore.case = T)
gsub(pattern = "$county", replacement = "", x = tolower(gini.data$GEOLABEL))
gsub(",$",replacement="", x=gsub(pattern = "$county", replacement = "", x = tolower(gini.data$GEOLABEL)))
gsub(",$+",replacement="", x=gsub(pattern = "$county", replacement = "", x = tolower(gini.data$GEOLABEL)))
gsub(",+",replacement="", x=gsub(pattern = "$county", replacement = "", x = tolower(gini.data$GEOLABEL)))
gsub(pattern = "$county", replacement = "", x = tolower(gini.data$GEOLABEL))
gsub(pattern = "county", replacement = "", x = tolower(gini.data$GEOLABEL))
gsub(pattern = "county$", replacement = "", x = tolower(gini.data$GEOLABEL))
gsub(pattern = " county", replacement = "", x = tolower(gini.data$GEOLABEL))
gsub("(.*),.*", "\\1",x = gsub(pattern = " county", replacement = "", x = tolower(gini.data$GEOLABEL)))
gini.data$GEOLABEL <- gsub("(.*),.*", "\\1",x = gsub(pattern = " county", replacement = "", x = tolower(gini.data$GEOLABEL)))
US.counties <- inner_join(US.counties, gini.data)
View(US.counties)
colnames(US.counties)
ggplot(US.counties, aes(x = `disttocity`, y = GINI)) + geom_point(color = "red") + geom_smooth(method = "lm")
US.counties
US.counties
View(US.counties)
attach(US.counties)
plot(disttocity, GINI, main="Scatterplot Example",
xlab="DIST ", ylab="GINI ", pch=19)
geom_smooth(method = "lm")
lm(GINI ~ `disttocity`, data = US.counties)
summary(lm(GINI ~ `disttocity`, data = US.counties))
attach(US.counties)
plot(disttocity, GINI, main="Scatterplot Example", xlab="DIST ", ylab="GINI ", pch=19)
abline(lm(disttocity~GINI), col="red") # regression line (y~x)
summary(lm(GINI ~ `disttocity`, data = US.counties))
attach(US.counties)
plot(disttocity, GINI, main="Scatterplot Example", xlab="DIST ", ylab="GINI ", pch=19)
abline(lm(GINI~disttocity), col="red") # regression line (y~x)
summary(lm(GINI ~ `disttocity`, data = US.counties))
library(RCurl)
worlddata = subset(read.csv(text = getURL("https://raw.githubusercontent.com/cyadusha/Popular-indicators/master/55e42714-cbf5-42ee-9995-eed3fc8d3102_Data.csv"), sep = ","), select = c(Country.Name, X1981..YR1981., X2013..YR2013.))
colnames(worlddata)[1] = "Country Name"
colnames(worlddata)[2] = "1981GINI"
colnames(worlddata)[3] = "2013GINI"
worlddata = worlddata[1:214,]
worlddata$`Country Name` = as.character(worlddata$`Country Name`)
worlddata$`1981GINI` = as.numeric(as.vector(worlddata$`1981GINI`))
worlddata$`2013GINI` = as.numeric(as.vector(worlddata$`2013GINI`))
worlddata$`1981GINI` = as.vector(worlddata$`1981GINI`/100)
worlddata$`2013GINI` = as.vector(worlddata$`2013GINI`/100)
worlddata$`Country Name`[which(worlddata$`Country Name` == "Korea, Dem. People's Rep.")]  = "North Korea"
worlddata$`Country Name`[which(worlddata$`Country Name` == "Korea, Rep.")]  = "South Korea"
worlddata$`Country Name`[which(worlddata$`Country Name` == "Congo, Dem. Rep.")] = "Democratic Republic of the Congo"
worlddata$`Country Name`[which(worlddata$`Country Name` == "Hong Kong SAR, China")] = "Hong Kong"
worlddata$`Country Name`[which(worlddata$`Country Name` == "Lao PDR")] = "Laos"
worlddata$`Country Name`[which(worlddata$`Country Name` == "Kyrgyz Republic")] = "Kyrgyzstan"
worlddata$`Country Name`[which(worlddata$`Country Name` == "Cabo Verde")] = "Cape Verde"
worlddata$`Country Name`[which(worlddata$`Country Name` == "Slovak Republic")] = "Slovakia"
worlddata$`Country Name` = gsub(",.*$", "", worlddata$`Country Name`)
worlddata$`Country Name` = sub(" *\\(.*", "", worlddata$`Country Name`)
worlddata = worlddata[order(worlddata$`Country Name`), ]
global2013 = subset(read.csv(text = getURL("https://raw.githubusercontent.com/cyadusha/Data_Extract_From_World_Development_Indicators/master/global2013.csv"), sep = ","), select = c(X, X.1))[18:212, ]
colnames(global2013) = c("Country Name", "2013GINI")
global2013$`Country Name` = as.character(global2013$`Country Name`)
global2013$`Country Name`[which(global2013$`Country Name` == "C\x99te d'Ivoire")] = "Cote d'Ivoire"
global2013$`Country Name`[which(global2013$`Country Name` == "Korea (Democratic People's Rep. of)")] = "North Korea"
global2013$`Country Name`[which(global2013$`Country Name` == "Korea (Republic of)")] = "South Korea"
global2013$`Country Name`[which(global2013$`Country Name` == "Viet Nam")] = "Vietnam"
global2013$`Country Name`[which(global2013$`Country Name` == "The former Yugoslav Republic of Macedonia")] = "Macedonia"
global2013$`Country Name`[which(global2013$`Country Name` == "Congo (Democratic Republic of the)")] = "Democratic Republic of the Congo"
global2013$`Country Name`[which(global2013$`Country Name` == "Lao People's Democratic Republic")] = "Laos"
global2013$`Country Name`[which(global2013$`Country Name` == "Saint Kitts and Nevis")] = "St. Kitts and Nevis"
global2013$`Country Name`[which(global2013$`Country Name` == "Saint Lucia")] = "St. Lucia"
global2013$`Country Name`[which(global2013$`Country Name` == "Saint Vincent and the Grenadines")] = "St. Vincent and the Grenadines"
global2013$`Country Name` = gsub(",.*$", "", global2013$`Country Name`)
global2013$`Country Name` = sub(" *\\(.*", "", global2013$`Country Name`)
global2013$`2013GINI` = as.vector(as.numeric(as.vector(global2013$`2013GINI`))/100)
global2013 = global2013[order(global2013$`Country Name`), ]
setdiff(worlddata$`Country Name`, global2013$`Country Name`)
setdiff(global2013$`Country Name`, worlddata$`Country Name`)
palestine = global2013[which(global2013$`Country Name` == "Palestine"),]
palestine$`1981GINI` = NA
nauru = global2013[which(global2013$`Country Name` == "Nauru"),]
nauru$`1981GINI` = NA
countriesunincluded = worlddata[c(which(worlddata$`Country Name` == "American Samoa"), which(worlddata$`Country Name` == "Aruba"), which(worlddata$`Country Name` == "Bermuda"), which(worlddata$`Country Name` == "Cayman Islands"), which(worlddata$`Country Name` == "Channel Islands"), which(worlddata$`Country Name` == "Curacao"), which(worlddata$`Country Name` == "Faroe Islands"), which(worlddata$`Country Name` == "French Polynesia"), which(worlddata$`Country Name` == "Greenland"), which(worlddata$`Country Name` == "Guam"), which(worlddata$`Country Name` == "Isle of Man"), which(worlddata$`Country Name` == "Kosovo"), which(worlddata$`Country Name` == "Macao SAR"), which(worlddata$`Country Name` == "New Caledonia"), which(worlddata$`Country Name` == "Northern Mariana Islands"), which(worlddata$`Country Name` == "Puerto Rico"), which(worlddata$`Country Name` == "Sint Maarten"), which(worlddata$`Country Name` == "St. Martin"), which(worlddata$`Country Name` == "Turks and Caicos Islands"), which(worlddata$`Country Name` == "Virgin Islands"), which(worlddata$`Country Name` == "West Bank and Gaza")), c(1,3)]
worlddata = rbind(worlddata, palestine, nauru)
worlddata = worlddata[order(worlddata$`Country Name`), ]
global2013 = rbind(global2013, countriesunincluded)
global2013 = global2013[order(global2013$`Country Name`), ]
finalworlddata = merge(global2013, worlddata, by = 'Country Name')
finalworlddata$`2013GINI.y` = ifelse(is.na(finalworlddata$`2013GINI.y`) == TRUE, finalworlddata$`2013GINI.x`, finalworlddata$`2013GINI.y`)
finalworlddata = finalworlddata[,c(1,3,4)]
colnames(finalworlddata) = colnames(worlddata)
finalworlddata$`1981GINI` = as.vector(finalworlddata$`1981GINI`)
finalworlddata$`2013GINI` = as.vector(finalworlddata$`2013GINI`)
library(Quandl)
Quandl.api_key("RNsFP11Q_uzhWbjuUiQp")
finalworlddata[which(finalworlddata$`Country Name` == "Bangladesh"), 2] = Quandl("WORLDBANK/BGD_SI_POV_GINI")[nrow(Quandl("WORLDBANK/BGD_SI_POV_GINI")),2]/100 #1984
finalworlddata[which(finalworlddata$`Country Name` == "Colombia"), 2] = Quandl("WORLDBANK/COL_SI_POV_GINI")[nrow(Quandl("WORLDBANK/COL_SI_POV_GINI")),2]/100 #1980
finalworlddata[which(finalworlddata$`Country Name` == "Czech Republic"), 3] = Quandl("WORLDBANK/CZE_SI_POV_GINI")[1,2]/100 #2011
finalworlddata[which(finalworlddata$`Country Name` == "Denmark"), 3] = Quandl("WORLDBANK/DNK_SI_POV_GINI")[1,2]/100 #2010
finalworlddata[which(finalworlddata$`Country Name` == "Switzerland"), 2] = Quandl("WORLDBANK/CHE_SI_POV_GINI")[nrow(Quandl("WORLDBANK/CHE_SI_POV_GINI")),2]/100 #1982
finalworlddata[which(finalworlddata$`Country Name` == "Sweden"), 2] = Quandl("WORLDBANK/SWE_SI_POV_GINI")[nrow(Quandl("WORLDBANK/SWE_SI_POV_GINI")),2]/100 #1981
finalworlddata[which(finalworlddata$`Country Name` == "Spain"), 2] = Quandl("WORLDBANK/ESP_SI_POV_GINI")[nrow(Quandl("WORLDBANK/ESP_SI_POV_GINI")),2]/100 #1980
finalworlddata[which(finalworlddata$`Country Name` == "Panama"), 2] = Quandl("WORLDBANK/PAN_SI_POV_GINI")[nrow(Quandl("WORLDBANK/PAN_SI_POV_GINI")),2]/100 #1979
finalworlddata[which(finalworlddata$`Country Name` == "Netherlands"), 2] = Quandl("WORLDBANK/NLD_SI_POV_GINI")[nrow(Quandl("WORLDBANK/NLD_SI_POV_GINI")),2]/100 #1983
finalworlddata[which(finalworlddata$`Country Name` == "Mexico"), 2] = Quandl("WORLDBANK/MEX_SI_POV_GINI")[nrow(Quandl("WORLDBANK/MEX_SI_POV_GINI")),2]/100 #1984
finalworlddata[which(finalworlddata$`Country Name` == "Malayasia"), 2] = Quandl("WORLDBANK/MYS_SI_POV_GINI")[nrow(Quandl("WORLDBANK/MYS_SI_POV_GINI")),2]/100 #1984
finalworlddata[which(finalworlddata$`Country Name` == "Madagascar"), 2] = Quandl("WORLDBANK/MDG_SI_POV_GINI")[nrow(Quandl("WORLDBANK/MDG_SI_POV_GINI")),2]/100 #1980
finalworlddata[which(finalworlddata$`Country Name` == "Israel"), 2] = Quandl("WORLDBANK/ISR_SI_POV_GINI")[nrow(Quandl("WORLDBANK/ISR_SI_POV_GINI")),2]/100 #1979
finalworlddata[which(finalworlddata$`Country Name` == "Indonesia"), 2] = Quandl("WORLDBANK/IDN_SI_POV_GINI")[nrow(Quandl("WORLDBANK/IDN_SI_POV_GINI")),2]/100 #1984
finalworlddata[which(finalworlddata$`Country Name` == "India"), 2] = Quandl("WORLDBANK/IND_SI_POV_GINI")[nrow(Quandl("WORLDBANK/IND_SI_POV_GINI"))-1,2]/100 #1983
finalworlddata[which(finalworlddata$`Country Name` == "Germany"), 2] = Quandl("WORLDBANK/DEU_SI_POV_GINI")[nrow(Quandl("WORLDBANK/DEU_SI_POV_GINI")),2]/100
library(rworldmap)
library(graphics)
n = joinCountryData2Map(finalworlddata, joinCode="NAME", nameJoinColumn="Country Name")
mapCountryData(n, nameColumnToPlot='1981GINI', mapTitle = "1981", addLegend = F)
mapCountryData(n, nameColumnToPlot= '2013GINI', mapTitle = "2013")
mapCountryData(n, nameColumnToPlot='1981GINI', mapTitle = "1981", addLegend = F)
mapCountryData(n, nameColumnToPlot= '2013GINI', mapTitle = "2013")
install.packages("Quandl")
Quandl("WORLDBANK/BGD_SI_POV_GINI")[nrow(Quandl("WORLDBANK/BGD_SI_POV_GINI")),2]
library(Quandl)
Quandl("WORLDBANK/BGD_SI_POV_GINI")[nrow(Quandl("WORLDBANK/BGD_SI_POV_GINI")),2]/100 #1984
setwd("~/IS607Spring2016/project-final/more")
![Image](more/indiamap1.png)
